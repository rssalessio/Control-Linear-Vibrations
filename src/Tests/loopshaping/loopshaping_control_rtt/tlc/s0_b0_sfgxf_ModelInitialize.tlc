%implements s0_b0_sfgxf_ModelInitialize "C"

%function ModelInitialize(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcInitializeConditionsFcnOfS0B0 = OpaqueTLCBlockFcn("InitializeConditions", 0, 0, 0, 4)
%assign tlcInitializeConditionsFcnOfS0B5 = OpaqueTLCBlockFcn("InitializeConditions", 0, 5, 0, 4)
%assign tlcInitializeConditionsFcnOfS0B6 = OpaqueTLCBlockFcn("InitializeConditions", 0, 6, 0, 4)
%assign tlcInitializeConditionsFcnOfS0B7 = OpaqueTLCBlockFcn("InitializeConditions", 0, 7, 0, 4)
%assign tlcInitializeConditionsFcnOfS0B8 = OpaqueTLCBlockFcn("InitializeConditions", 0, 8, 0, 4)
%<SLibInsertAsyncTaskInitializeCode(system)>
%<SLibWriteMachineInitialize()>
/* Start for DiscretePulseGenerator: '<Root>/Pulse Generator' */
loopshaping_control_DW.clockTickCounter = -1000;
/* Start for S-Function (arduinodigitalinput_sfcn): '<S17>/S-Function' */
MW_pinModeInput(loopshaping_control_P.SFunction_p1);
/* Start for S-Function (arduinodigitalinput_sfcn): '<S19>/S-Function' */
MW_pinModeInput(loopshaping_control_P.SFunction_p1_l);
/* Start for S-Function (arduinodigitaloutput_sfcn): '<S13>/Digital Output' */
MW_pinModeOutput(loopshaping_control_P.DigitalOutput_pinNumber);
/* Start for S-Function (arduinodigitaloutput_sfcn): '<S14>/Digital Output' */
MW_pinModeOutput(loopshaping_control_P.DigitalOutput_pinNumber_f);
%<tlcInitializeConditionsFcnOfS0B0>\
/* InitializeConditions for Memory: '<S1>/Memory' */
loopshaping_control_DW.Memory_PreviousInput = loopshaping_control_P.Memory_X0;
/* InitializeConditions for Memory: '<S1>/Memory1' */
loopshaping_control_DW.Memory1_PreviousInput = loopshaping_control_P.Memory1_X0;
%<tlcInitializeConditionsFcnOfS0B5>\
/* InitializeConditions for ZeroPole: '<S2>/loopshaping' */
loopshaping_control_X.loopshaping_CSTATE[0] = 0.0;
loopshaping_control_X.loopshaping_CSTATE[1] = 0.0;
%<tlcInitializeConditionsFcnOfS0B6>\
%<tlcInitializeConditionsFcnOfS0B7>\
%<tlcInitializeConditionsFcnOfS0B8>\
%<SLibInsertInitPeriodicCStatesFcn(system)>
%closefile cfgTxt
%<cfgTxt>
%assign fcnProtoType = ""
%openfile fcnProtoType
static void ModelInitialize(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 4, fcnProtoType)>
%endfunction

%implements s1_b0_fa7mg_Derivatives "C"

%function Derivatives(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
int_T is;
int_T ci;
static const int8_T ir[7] = { 0, 1, 7, 9, 15, 18, 22 };
static const int8_T ir_0[7] = { 0, 1, 1, 2, 3, 4, 5 };
static const int8_T jc[22] = { 0, 0, 1, 2, 3, 4, 5, 2, 5, 0, 1, 2, 3, 4, 5, 2, 3, 5, 0, 2, 4, 5 };
XDot_hinf_T *_rtXdot;
%closefile localVarDecl
_rtXdot = %<(SLibCG_SE(SLibGetContStatesDerivativeStructPtr()))>;
/* Derivatives for StateSpace: '<S2>/H INFINITY' */
for (is = 0; is < 6; is++) {
    _rtXdot->HINFINITY_CSTATE[is] = 0.0;
}
for (is = 0; is < 6; is++) {
    for (ci = ir[is]; ci < ir[is + 1]; ci++) {
        _rtXdot->HINFINITY_CSTATE[is] += hinf_P.HINFINITY_A[ci] * hinf_X.HINFINITY_CSTATE[jc[ci]];
    }
}
for (is = 0; is < 6; is++) {
    for (ci = ir_0[is]; ci < ir_0[is + 1]; ci++) {
        _rtXdot->HINFINITY_CSTATE[is] += hinf_P.HINFINITY_B[ci] * hinf_B.Sum;
    }
}
/* End of Derivatives for StateSpace: '<S2>/H INFINITY' */
%closefile cfgTxt
%<cfgTxt>
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Derivatives(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 2, fcnProtoType)>
%<LibSetSystemField(system, "CachedDerivativeLocalVars", localVarDecl)>
%endfunction
